import com.github.spotbugs.snom.SpotBugsTask

plugins {
  id "java"
  id "eclipse"
  id("com.github.spotbugs") version "4.2.0"
  id "org.openstreetmap.josm" version "0.7.0"
}

sourceCompatibility = 1.8

def versions = [
  junit: "5.6.2",
  spotbugs: "4.2.0"
]

repositories {
  jcenter()
  mavenCentral()
}

dependencies {
  testImplementation("org.junit.jupiter:junit-jupiter-api:${versions.junit}")
  testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${versions.junit}")
  testImplementation("org.junit.vintage:junit-vintage-engine:${versions.junit}")
  testImplementation("org.openstreetmap.josm:josm-unittest:"){changing=true}
  testImplementation("com.github.tomakehurst:wiremock-jre8:2.26.3")
  testImplementation("org.awaitility:awaitility:4.0.2")
  testImplementation("com.github.spotbugs:spotbugs-annotations:${versions["spotbugs"]}")
  compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
  compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'
  packIntoJar("org.opensourcebim:BuildingSMARTLibrary:1.0.9")
}

archivesBaseName = "indoorhelper"
sourceSets {
  main {
    java {
      srcDirs = ['src']
    }
    resources {
      srcDirs = ["$projectDir"]
      include 'data/**'
      include 'images/**'
      include 'resources/**'
      include 'README.md'
    }
  }
  test {
    java {
      srcDirs = ["test/unit"]
    }
    resources {
      srcDirs = ["test/data"]
    }
  }
}

tasks.withType(JavaCompile) {
  options.compilerArgs += [
	"-Xlint:all",
	"-Xlint:-serial",
  ]
}

// Spotbugs config
spotbugs {
  toolVersion.set(versions.spotbugs)
  ignoreFailures.set(true)
  effort = "max"
  reportLevel = "low"
}
tasks.withType(SpotBugsTask) {
  reports {
    html.enabled = true
  }
}